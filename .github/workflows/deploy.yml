# name: Build, Push, and Deploy

# on:
#   push:
#     branches: [ main ]

# env:
#   REGISTRY: docker.io
#   IMAGE_FRONTEND: ${{ secrets.DOCKERHUB_USERNAME }}/registration-frontend
#   IMAGE_BACKEND: ${{ secrets.DOCKERHUB_USERNAME }}/registration-backend

# jobs:
#   build-and-push:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout
#         uses: actions/checkout@v4

#       - name: Set up Docker Buildx
#         uses: docker/setup-buildx-action@v3

#       - name: Log in to Docker Hub
#         uses: docker/login-action@v3
#         with:
#           username: ${{ secrets.DOCKERHUB_USERNAME }}
#           password: ${{ secrets.DOCKERHUB_TOKEN }}

#       - name: Build and push frontend
#         uses: docker/build-push-action@v6
#         with:
#           context: practical-class/registration-app/frontend
#           push: true
#           tags: |
#             ${{ env.IMAGE_FRONTEND }}:latest
#           build-args: |
#             REACT_APP_API_URL=${{ secrets.REACT_APP_API_URL_PROD }}

#       - name: Build and push backend
#         uses: docker/build-push-action@v6
#         with:
#           context: practical-class/registration-app/backend
#           push: true
#           tags: |
#             ${{ env.IMAGE_BACKEND }}:latest

#   deploy:
#     runs-on: ubuntu-latest
#     needs: build-and-push
#     steps:
#       - name: Checkout
#         uses: actions/checkout@v4

#       - name: Copy compose file to server
#         uses: appleboy/scp-action@v0.1.7
#         with:
#           host: ${{ secrets.EC2_HOST }}
#           username: ${{ secrets.EC2_USER }}
#           key: ${{ secrets.EC2_SSH_KEY }}
#           source: practical-class/registration-app/docker-compose.prod.yml
#           target: ~/app

#       - name: Deploy on server
#         uses: appleboy/ssh-action@v1.0.3
#         with:
#           host: ${{ secrets.EC2_HOST }}
#           username: ${{ secrets.EC2_USER }}
#           key: ${{ secrets.EC2_SSH_KEY }}
#           script: |
#             set -e
#             cd ~/app/practical-class/registration-app
#             export DOCKERHUB_USERNAME=${{ secrets.DOCKERHUB_USERNAME }}
#             export SECRET_KEY=${{ secrets.BACKEND_SECRET_KEY }}
#             docker compose -f docker-compose.prod.yml pull
#             docker compose -f docker-compose.prod.yml up -d

